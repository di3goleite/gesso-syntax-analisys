"Name"     = 'Enter the name of the grammar'
"Author"   = 'Enter your name'
"Version"  = 'The version of the grammar and/or language'
"About"    = 'A short description of the grammar'

"Start Symbol" = <Start>

! -------------------------------------------------
! Character Sets
! -------------------------------------------------

{WS}           = {Whitespace} - {CR} - {LF}
{ID Head}      = {Letter} + [_]
{ID Tail}      = {Alphanumeric} + [_]
{String Chars} = {Printable} + {HT} - ["]

! -------------------------------------------------
! Terminals
! -------------------------------------------------

! The following defines the Whitespace terminal using the {WS}
! set - which excludes the carriage return and line feed 
! characters

Whitespace    = {WS}+
NewLine       = {CR}{LF} | {CR} | {LF}

Identifier    = {ID Head}{ID Tail}*
DecLiteral       = [0123456789]{Digit}*
FloatLiteral     = {Digit}*'.'{Digit}+
StringLiteral = '"' {String Chars}* '"'
BoolLiteral = 'true' | 'false'

! -------------------------------------------------
! Rules
! -------------------------------------------------

! The following rule defines a series of newline tokens.
! Use this rule rather than the newline terminal.

<nl>     ::= NewLine <nl>          !One or more
          |  NewLine

<nl Opt> ::= NewLine <nl Opt>      !Zero or more
          |  !Empty

! <nl opt> removes blank lines before first statement

<Start>   ::= <nl opt> <Program> <nl opt>

<Program> ::= <MethodCall>

! -------------------------------------------------
! Vectors
! -------------------------------------------------

<IndexedVector> ::= Identifier <VectorIndex>
                 
                              
<VectorIndex>  ::= '[' <Expression> ']' <OptionalExtraIndexes>
 
<OptionalExtraIndexes> ::= '[' <Expression> ']' <VectorIndex> 
             | '[' <VectorIndex> ']'
             |

! -------------------------------------------------
! Variable and Const Declarations
! -------------------------------------------------


! -------------------------------------------------
! Expressions
! -------------------------------------------------


<Expression>  ::= <Add Exp> '>'  <Expression> 
               |  <Add Exp> '<'  <Expression> 
               |  <Add Exp> '<=' <Expression> 
               |  <Add Exp> '>=' <Expression>
               |  <Add Exp> '==' <Expression>    !Equal
               |  <Add Exp> '!=' <Expression>    !Not equal
               |  <Add Exp> '&&' <Expression>
               |  <Add Exp> '||' <Expression>
               |  <Add Exp> '!'  <Expression>
               |  <Add Exp>

<Add Exp>     ::= <Mult Exp> '+' <Add Exp>
               |  <Mult Exp> '-' <Add Exp>
               |  <Mult Exp> 

<Mult Exp>    ::= <Negate Exp> '*' <Mult Exp> 
               |  <Negate Exp> '/' <Mult Exp> 
               |  <Negate Exp> 

<Negate Exp>  ::= '-' <Value> 
               |  <Value> 

!Add more values to the rule below - as needed

<Value>      ::= DecLiteral
                | FloatLiteral
                | StringLiteral
                | BoolLiteral 
                | Identifier
                | Identifier  '.' Identifier ! class attr
                |  '(' <Expression> ')'


<Number>     ::= <Increment> <Expression>
               | <Expression> <Increment>
               | <Expression>

<Increment>  ::= '++' 
               | '--'


! -------------------------------------------------
! Function and Method Calls
! -------------------------------------------------

<ArgList>  ::= <Value> <OptionalExtraArgs>
 
<OptionalExtraArgs> ::= ',' <ArgList> 
             | <Value>
             |
                 
<FunctionCall>  ::= Identifier '(' <ArgList> ')'

<MethodCall>  ::= Identifier '.' <FunctionCall> 


<Write>  ::= 'TODO' 
<Read>  ::= 'TODO' 
! -------------------------------------------------
! Control Structures
! -------------------------------------------------

<If>  ::= 'TODO' 

<While>  ::= 'while' '(' <Expression> ')' '{' <Statements> '}' 
          
! -------------------------------------------------
! Statements and Blocks
! -------------------------------------------------

<Statements>  ::= <Statement><Statements>
               | 

<Statement>  ::= <If>
              | <While>
              | <Expression> ';'
              | <Assignment> ';'
              | <Write> ';'
              | <Read> ';'
               

<Assignment>  ::= Identifier '=' <Expression>

! -------------------------------------------------
! Methods
! -------------------------------------------------
<Method>  ::= 'TODO' 
<MethodBody> ::= '{' <Statements> 'return' <Expression> '}'

! -------------------------------------------------
! Class
! -------------------------------------------------



